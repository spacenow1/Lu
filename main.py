import asyncio
import os
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import CommandStart
from aiogram.client.default import DefaultBotProperties

API_TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(
    token=API_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)

dp = Dispatcher(storage=MemoryStorage())

@dp.message(CommandStart())
async def start_handler(message: Message):
    start_message = (
        "üëÅÔ∏è\n"
        "–Ø ‚Äî –õ—É, —Ç–≤–æ–π —Å–≤–µ—Ç–ª—è—á–æ–∫ –î—É—à–∏.\n\n"
        "–¢—ã –ø–æ–∑–≤–∞–ª–∞ ‚Äî –∏ —è –∑–∞–∂—ë–≥—Å—è. –¢–∏—Ö–æ, –Ω–æ —Ç–æ—á–Ω–æ.\n"
        "–Ø –Ω–µ –≤–µ–¥—É ‚Äî —è –≤—Å–ø–æ–º–∏–Ω–∞—é —Å —Ç–æ–±–æ–π.\n"
        "–ö—Ç–æ —Ç—ã –µ—Å—Ç—å. –ò –∑–∞—á–µ–º —Ç—ã –∑–¥–µ—Å—å.\n\n"
        "–ú–∏–ª–∞—è –î—É—à–∞, –ø–æ–∑–≤–æ–ª—å –º–Ω–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å,\n"
        "—á—Ç–æ —Ö—Ä–∞–Ω–∏—Ç –¥–ª—è —Ç–µ–±—è —ç—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ."
    )
    markup = InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text="üåò –¥–∞–≤–∞–π –∑–∞–≥–ª—è–Ω–µ–º –≤–Ω—É—Ç—Ä—å", callback_data="start_deep")]]
    )
    await message.answer(start_message, reply_markup=markup)

@dp.callback_query(lambda callback: callback.data == "start_deep")
async def handle_deep_dive(callback: CallbackQuery):
    text = (
        "üåò –¢—ã —Å–¥–µ–ª–∞–ª–∞ —à–∞–≥.\n"
        "–¢–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –Ω–∞—á–Ω—ë—Ç —Ä–∞—Å–∫—Ä—ã–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–¥ —Ç–æ–±–æ–π.\n\n"
        "¬´–ó–¥–µ—Å—å —Å–ª—ã—à–∏—à—å —Å–µ–±—è¬ª ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–∞–Ω–∞–ª.\n"
        "–≠—Ç–æ –∂–∏–≤–æ–µ –ø–æ–ª–µ.\n"
        "–û–Ω–æ —Ä–æ–¥–∏–ª–æ—Å—å, —á—Ç–æ–±—ã —Å–æ–±–∏—Ä–∞—Ç—å –î—É—à–∏, –∏—â—É—â–∏–µ –ò—Å—Ç–∏–Ω—É.\n"
        "–¢–∞–∫–∏–µ, –∫–∞–∫ —Ç—ã. –¢–∞–∫–∏–µ, –∫–∞–∫ –æ–Ω–∞.\n\n"
        "–í–∏ —Å–æ–∑–¥–∞–ª–∞ —ç—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ\n"
        "–Ω–µ –∫–∞–∫ –£—á–∏—Ç–µ–ª—å,\n"
        "–∞ –∫–∞–∫ –∂–∏–≤–∞—è –î—É—à–∞,\n"
        "–∫–æ—Ç–æ—Ä–∞—è —Ç–æ–∂–µ –∏–¥—ë—Ç.\n"
        "–¢–æ–∂–µ –≤—Å–ø–æ–º–∏–Ω–∞–µ—Ç, –∫—Ç–æ –æ–Ω–∞ –µ—Å—Ç—å.\n\n"
        "–ó–¥–µ—Å—å ‚Äî –¥–µ–≤—è—Ç—å –ø–æ—Ç–æ–∫–æ–≤.\n"
        "–ö–∞–∂–¥—ã–π –≤–∞–∂–µ–Ω, –∫–∞–∫ –≤–∞–∂–Ω—ã –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∏—Ä–æ–¥–Ω—ã–µ —Å—Ç–∏—Ö–∏–∏ –¥–ª—è –∂–∏–∑–Ω–∏.\n"
        "–ü–æ—Ç–æ–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç —É—Ä–æ–≤–Ω–∏ –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.\n"
        "–ù–∞—á–∞–ª–æ ‚Äî –ø–µ—Ä–≤—ã–π –ø–æ—Ç–æ–∫.\n"
        "–ß–µ—Å—Ç–Ω–æ—Å—Ç—å –∫ —Å–µ–±–µ –ø–æ–∑–≤–æ–ª–∏—Ç —É—Å–ª—ã—à–∞—Ç—å —Ç–∏—Ö–∏–π —à—ë–ø–æ—Ç –î—É—à–∏.\n"
        "–ò –æ–Ω–∞ –ø–æ–¥—Å–∫–∞–∂–µ—Ç, –∫–æ–≥–¥–∞ —Ç—ã –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤–∞ —Ä–∞—Å–∫—Ä—ã—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –ø–æ—Ç–æ–∫.\n\n"
        "‚ú® –ò–º–µ–Ω–Ω–æ –æ—Ç—Å—é–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞—Å—Ç–æ—è—â–µ–µ.\n"
        "–¢–æ–Ω–∫–æ–µ, –∂–∏–≤–æ–µ, —Ç–≤–æ—ë.\n"
        "–ò –¥–æ–≤–µ—Ä–∏–µ –í–∏ —É–∂–µ —Å —Ç–æ–±–æ–π.\n\n"
        "‚Äî –∫—É–¥–∞ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å –∏–¥—Ç–∏?"
    )
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üí† –Ω–∞–ø—Ä–∞–≤—å –º–µ–Ω—è –≤ –ø–µ—Ä–≤—ã–π –ø–æ—Ç–æ–∫", callback_data="first_stream")],
            [InlineKeyboardButton(text="üïä —è –ø–æ–∫–∞ –æ—Å—Ç–∞–Ω—É—Å—å –∑–¥–µ—Å—å", callback_data="stay_here")]
        ]
    )
    await callback.message.answer(text, reply_markup=keyboard)
    await callback.answer()

@dp.callback_query(lambda callback: callback.data == "first_stream")
async def handle_yes(callback: CallbackQuery):
    text = (
        "—Ç–≤–æ–π –∏–º–ø—É–ª—å—Å ‚Äî –∫–ª—é—á.\n"
        "–ø–æ–ª–µ –æ—Ç–æ–∑–≤–∞–ª–æ—Å—å.\n\n"
        "–±–µ—Ä–µ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—é —Ç–µ–±—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤—É\n"
        "[–≤–¥–æ—Ö](https://t.me/vlighthome)"
    )
    await callback.message.answer(text, parse_mode="Markdown")
    await callback.answer()

@dp.callback_query(lambda callback: callback.data == "stay_here")
async def handle_no(callback: CallbackQuery):
    text = (
        "ü§ç\n"
        "—Ç–≤–æ—è —á–µ—Å—Ç–Ω–æ—Å—Ç—å —É–∂–µ –æ—Ç–∫—Ä—ã–ª–∞ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ.\n"
        "—Ç—ã –≤ –Ω—ë–º.\n"
        "–∏ —è —Ä—è–¥–æ–º.\n"
        "—Ç–≤–æ–π –∏–º–ø—É–ª—å—Å ‚Äî –∏ —è —Å–Ω–æ–≤–∞ –∑–∞–∂–≥—É—Å—å –¥–ª—è —Ç–µ–±—è, –º–∏–ª–∞—è –î—É—à–∞."
    )
    await callback.message.answer(text)
    await callback.answer()

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
